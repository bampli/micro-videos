import { CreateCategoryUseCase } from '@fc/micro-videos/category/application';
import { CategoriesController } from './categories.controller';
import { CreateCategoryDto } from './dto/create-category.dto';
//import { Test, TestingModule } from '@nestjs/testing';
//import { CategoriesService } from './categories.service';

describe('CategoriesController Unit Tests', () => {
  let controller: CategoriesController;

  beforeEach(async () => {
    // original generated by Nest.js
    // const module: TestingModule = await Test.createTestingModule({
    //   controllers: [CategoriesController],
    //   providers: [CategoriesService],
    // }).compile();

    // controller = module.get<CategoriesController>(CategoriesController);

    controller = new CategoriesController();
  });

  // it('should be defined', () => {
  //   expect(controller).toBeDefined();
  // });

  it('should create a category', async() => {
    const expectedOutput: CreateCategoryUseCase.Output = {
      id: '957334c5-91b9-4986-9b43-0d42f2edfbe9',
      name: 'Movie',
      description: 'some description',
      is_active: true,
      created_at: new Date(),
    };
    const mockCreateUseCase = {
      execute: jest.fn().mockReturnValue(expectedOutput),
    };
    //@ts-expect-error
    controller['createUseCase'] = mockCreateUseCase;
    const input: CreateCategoryDto = {
      name: 'Movie',
      description: 'some description',
      is_active: true,
    };
    const output = await controller.create(input);
    expect(mockCreateUseCase.execute).toBeCalledWith(input);
    expect(output).toStrictEqual(expectedOutput);
  });

  it('should update a category', () => {
    expect(controller).toBeDefined();
  });

  it('should delete a category', () => {
    expect(controller).toBeDefined();
  });

  it('should get a category', () => {
    expect(controller).toBeDefined();
  });

  it('should list categories', () => {
    expect(controller).toBeDefined();
  });
});
